<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <!-- @Component, @Service, @Controller, @Repository 애노테이션이 붙은
       클래스를 찾아 인스턴스를 생성한다. => @Autowired가 붙은 변수에 객체를 주입한다. -->
	<context:component-scan base-package="ktds" />

  <!-- @RequestMapping 등 MVC 관련 애노테이션을 처리할 객체를 준비한다. -->
	<mvc:annotation-driven />

	<!-- Database 커넥션 풀 준비 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/ktds?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- SqlSessionFactory 준비 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:ktds/edu/dao/*Dao.xml" />
		<property name="typeAliasesPackage" value="ktds.edu.domain" />
	</bean>
	
	<!-- 멀티파트 형식의 데이터를 처리하고 싶다면, 다음 객체를 선언해야 한다. -->
  <bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="10000000" />
  </bean>

</beans>






